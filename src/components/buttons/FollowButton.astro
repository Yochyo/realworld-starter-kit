---
export type Props = { following: boolean; slug: string; defaultButtonClasses?: string };
const { following, username } = Astro.props;
---

<button
  class={`btn btn-sm ${following ? "btn-secondary" : "btn-outline-secondary"}`}
  name="user-follow-button"
  username={username}>
  <i class="ion-plus-round"></i>{" "}
  <span class="follow-text">{following ? "Unfollow " : "Follow "}{username}</span>
</button>

<script>
  import { ApiImpl } from "../../api/api";
  import { getToken } from "../../utils/cookies";

  const buttons = document.getElementsByName("user-follow-button");
  buttons.forEach((button) => {
    button.addEventListener("click", (event) => {
      const token = getToken();
      if (!token) {
        window.location.href = "/register";
        return;
      }
      const target = event.currentTarget as HTMLElement;
      target.blur();

      const isFollowing = target.classList.contains("btn-secondary");
      const username = target.getAttribute("username");

      const res = isFollowing ? ApiImpl.unfollowProfile(token, username) : ApiImpl.followProfile(token, username);
      res.then((res) => {
        if (res.profile) {
          buttons.forEach((buttonToUpdate) => {
            if (buttonToUpdate.getAttribute("username") == username) {
              buttonToUpdate.classList.toggle("btn-outline-secondary");
              buttonToUpdate.classList.toggle("btn-secondary");

              buttonToUpdate.querySelector(".follow-text").innerHTML = `${
                isFollowing ? "Follow " : "Unfollow "
              } ${username}`;
            }
          });
        }
      });
    });
  });
</script>
